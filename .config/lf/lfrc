set cleaner ctpvclear
set cursorpreviewfmt ""
set dircounts
set drawbox
set icons
set ifs "\n"
set info size
set mouse
set period 1
set previewer ctpv
set scrolloff 0
set shell sh
set shellopts '-eu'
set sixel true
&ctpv -s $id
&ctpvquit $id

map <m-2> %dragon-drop -a -x $fx
map <c-m-1> invert-below
map <esc> :clear; setfilter; unselect
map <enter> open
map <delete> %trash-put $fx
map <s-delete> %rm -rf $fx
map <c-a> :unselect; invert
map <c-c> copy
map <c-v> paste
map ` !true
map . set hidden!
map f filter
map i pager
map R bulk-rename
map x %trash-put $fx
map X delete
map gc ${{lf -remote "send $id cd $HOME/.config"}}
map gd ${{lf -remote "send $id cd $HOME/Downloads"}}
map gm ${{lf -remote "send $id cd $XDG_RUNTIME_DIR/gvfs"}}
map gt ${{lf -remote "send $id cd $HOME/.local/share/Trash"}}
map gu ${{lf -remote "send $id cd /run/media/$USER"}}
map za push :archive<space>
map zc push :zoxide<space>
map zd push %mkdir<space>
map zf push %touch<space>
map zu unarchive

cmd archive ${{
	set -f
	mkdir $1
	cp -r $fx $1
	7z a $1.zip $1
	rm -rf $1
}}

cmd pager ${{
	if [ -f "$f" ]; then
		$PAGER "$f"
	elif [ -d "$f" ]; then
		tree "$f" | $PAGER
	fi
}}

cmd paste &{{
	set -- $(cat ~/.local/share/lf/files)
	mode="$1"
	shift
	case "$mode" in
		copy)
			rsync -av --ignore-existing --progress -- "$@" . |
			stdbuf -i0 -o0 -e0 tr '\r' '\n' |
			while IFS= read -r line; do
				line="$(printf '%s' "$line" | sed 's/\\/\\\\/g;s/"/\\"/g')"
				lf -remote "send $id echo \"$line\""
			done
			;;
		move)
			mv -n -- "$@" .
			lf -remote "send clear"
			;;
	esac
}}

cmd bulk-rename ${{
	if [ -n "$fs" ]; then
		fs="$(basename -a -- $fs)"
		old="$(mktemp)"
		new="$(mktemp)"
		printf '%s\n' "$fs" > "$old"
		printf '%s\n' "$fs" > "$new"
		$EDITOR "$new"
		[ "$(wc -l < "$new")" -ne "$(wc -l < "$old")" ] && exit
		paste "$old" "$new" | while IFS= read -r names; do
			src="$(printf '%s' "$names" | cut -f1)"
			dst="$(printf '%s' "$names" | cut -f2)"
			if [ "$src" = "$dst" ] || [ -e "$dst" ]; then
				continue
			fi
			mv -- "$src" "$dst"
		done
		rm -- "$old" "$new"
		lf -remote "send $id unselect"
	else
		rename $f
	fi
}}

cmd unarchive ${{
	set -f
	case $f in
		*.tar.bz|*.tar.bz2|*.tbz|*.tbz2 ) tar xjvf $f ;;
		*.tar.gz|*.tgz                  ) tar xzvf $f ;;
		*.tar.xz|*.txz                  ) tar xJvf $f ;;
		*.zip                           ) unzip $f ;;
		*.rar                           ) unrar x $f ;;
		*.7z                            ) 7z x $f ;;
	esac
}}

cmd zoxide ${{
	result="$(zoxide query -i | sed 's/\\/\\\\/g;s/"/\\"/g')"
	lf -remote "send $id cd \"$result\""
}}
