set cleaner ctpvclear
set cursorpreviewfmt ""
set dircounts
set drawbox
set icons
set ifs "\n"
set info size
set mouse
set period 1
set previewer ctpv
set shell sh
set shellopts '-eu'
set scrolloff 6
&ctpv -s $id
&ctpvquit $id

map <enter> shell
map <delete> %trash-put $fx
map <s-delete> %rm -rf $fx
map ` !true
map . set hidden!
map a push %mkdir<space>
map o $xdg-open $f
map p :paste; clear
map x $$f
map X !$f
map zz push :zz<space>

# smart cd
cmd zz ${{
	result="$(zoxide query -i | sed 's/\\/\\\\/g;s/"/\\"/g')"
	lf -remote "send $id cd \"$result\""
}}

# define a custom 'open' command
cmd open &{{
	case $(file --mime-type -Lb $f) in
		text/* ) lf -remote "send $id \$$PAGER \$fx" ;;
		*      ) for f in $fx; do $OPENER $f > /dev/null 2> /dev/null & done ;;
	esac
}}

# cp progress
cmd paste &{{
	set -- $(cat ~/.local/share/lf/files)
	mode="$1"
	shift
	case "$mode" in
		copy )
			rsync -av --ignore-existing --progress -- "$@" . |
			stdbuf -i0 -o0 -e0 tr '\r' '\n' |
			while IFS= read -r line; do
				lf -remote "send $id echo $line"
			done
			;;
		move ) mv -n -- "$@" . ;;
	esac
	rm ~/.local/share/lf/files
	lf -remote "send clear"
}}

# extract the current file with the right command
cmd extract ${{
	set -f
	case $f in
		*.tar.bz|*.tar.bz2|*.tbz|*.tbz2 ) tar xjvf $f ;;
		*.tar.gz|*.tgz                  ) tar xzvf $f ;;
		*.tar.xz|*.txz                  ) tar xJvf $f ;;
		*.zip                           ) unzip $f ;;
		*.rar                           ) unrar x $f ;;
		*.7z                            ) 7z x $f ;;
	esac
}}

# compress current file or selected files with tar and gunzip
cmd tar ${{
	set -f
	mkdir $1
	cp -r $fx $1
	tar czf $1.tar.gz $1
	rm -rf $1
}}

# compress current file or selected files with zip
cmd zip ${{
	set -f
	mkdir $1
	cp -r $fx $1
	zip -r $1.zip $1
	rm -rf $1
}}
