[[ $- != *i* ]] && return

[[ -f /usr/share/git/completion/git-prompt.sh ]] && . /usr/share/git/completion/git-prompt.sh
[[ -f ~/.cache/wal/sequences ]] && (cat ~/.cache/wal/sequences &)

_fzf_compgen_path() {
	fd --exclude ".git" . "$1" --follow --hidden
}

_fzf_compgen_dir() {
	fd --exclude ".git" . "$1" --follow --hidden --type directory
}

_fzf_comprun() {
	local command=$1
	shift
	case "$command" in
		cd           ) fzf --preview "eza --color=always --tree {} | head -200" "$@" ;;
		export|unset ) fzf --preview "eval 'echo \$'{}" "$@" ;;
		ssh          ) fzf --preview "dig {}" "$@" ;;
		*            ) fzf --preview "if [ -d {} ]; then eza --color=always --tree {} | head -200; else bat --color=always --line-range :500 --number {}; fi" "$@" ;;
	esac
}

proxy() {
	PROXY_ENV="all_proxy ALL_PROXY ftp_proxy FTP_PROXY http_proxy HTTP_PROXY https_proxy HTTPS_PROXY"
	if [[ -z "$ALL_PROXY" ]]; then
		for envar in $PROXY_ENV; do
			export $envar="http://127.0.0.1:7890"
		done
		gsettings set org.gnome.system.proxy mode 'manual'
		echo "Proxy On"
	else
		for envar in $PROXY_ENV; do
			unset $envar
		done
		gsettings set org.gnome.system.proxy mode 'none'
		echo "Proxy Off"
	fi
}

setenv() {
	case "$LAUNCHER" in
		fuzzel ) export MENU="fuzzel --dmenu" ;;
		rofi   ) export MENU="rofi -dmenu" ;;
		walker ) export MENU="walker --dmenu --keepsort" ;;
		*      ) export MENU="dmenu" ;;
	esac
}

[[ ":$PATH:" != *":$HOME/.local/bin:"* ]] && PATH="$HOME/.local/bin:$PATH"

export BROWSER="firefox"
export EDITOR="vim"
export FZF_DEFAULT_COMMAND="fd --exclude .git --follow --hidden --strip-cwd-prefix"
export FZF_CTRL_T_COMMAND="fd --exclude .git --follow --hidden --strip-cwd-prefix --type file"
export FZF_ALT_C_COMMAND="fd --exclude .git --follow --hidden --strip-cwd-prefix --type directory"
export FZF_CTRL_T_OPTS="--preview 'if [ -d {} ]; then eza --color=always --tree {} | head -200; else bat --color=always --line-range :500 --number {}; fi'"
export FZF_ALT_C_OPTS="--preview 'eza --color=always --tree {} | head -200'"
export GTK2_RC_FILES="$HOME/.config/gtk-2.0/gtkrc"
export HISTCONTROL="ignoreboth:erasedups"
export LESS="-IR"
export OPENER="xdg-open"
export PAGER="less"
export QT_IM_MODULE="fcitx"
export SDL_IM_MODULE="fcitx"
export SUDO_ASKPASS="$HOME/.local/bin/sapmenu"
export TUI="tui"
export W3M_DIR="$HOME/.config/w3m"
export XMODIFIERS="@im=fcitx"

PS1="\[$(tput sc; tput setaf 3; printf '%*s' $COLUMNS $(__git_ps1); tput rc)\]\[$(tput setaf 2)\]\u@\h:\[$(tput setaf 1)\]\w>\[$(tput sgr0)\] "

alias ll="eza --all --color=always --git --git-repos --group-directories-first --icons=always --long"

eval "$(fzf --bash)"
eval "$(zoxide init bash)"

if [ -z "$DISPLAY" ] && [ "$XDG_VTNR" = 1 ]; then
	export GTK_THEME="Adwaita"
	export LAUNCHER="fuzzel"
	export QT_QPA_PLATFORMTHEME="gtk3"
	export QT_STYLE_OVERRIDE="Fusion"
	export TERMINAL="foot"
	gsettings set org.gnome.desktop.interface icon-theme "Adwaita"
	setenv
	exec Hyprland
elif [ -z "$DISPLAY" ] && [ "$XDG_VTNR" = 2 ]; then
	export GTK_THEME="Adwaita-dark"
	export LAUNCHER="dmenu"
	export QT_QPA_PLATFORMTHEME="gtk3"
	export QT_STYLE_OVERRIDE="Fusion"
	export TERMINAL="st"
	gsettings set org.gnome.desktop.interface icon-theme "Adwaita"
	setenv
	exec startx ~/.config/xorg/xinitrc
elif [ -z "$DISPLAY" ] && [ "$XDG_VTNR" = 3 ]; then
	export GTK_THEME="Chicago95"
	export LAUNCHER="xfce4-appfinder"
	export QT_STYLE_OVERRIDE="Windows"
	export TERMINAL="xfce4-terminal"
	gsettings set org.gnome.desktop.interface icon-theme "Chicago95"
	setenv
	exec startx ~/.config/xorg/xinitrc xfce
else
	fastfetch | lolcat
fi
