#!/bin/sh

case "$MENU" in
	dmenu) opt="-noi" ;;
esac

onescreen() { # If only one output available or chosen.
	if [ -n "$WAYLAND_DISPLAY" ]; then
		hyprctl keyword monitor $1,highrr,auto,auto
		while read -r screen; do
			hyprctl keyword monitor $screen,disable
		done <<< $(echo "$screens" | grep -v "$1")
	elif [ -n "$DISPLAY" ]; then
		xrandr --output "$1" --auto --scale 1.0x1.0 $(echo "$displays" | grep -v "\b$1" | awk '{print "--output", $1, "--off"}' | paste -sd ' ' -)
	fi
}

twoscreen() { # If multi-monitor is selected and there are two screens.
	mirror=$(printf "No\\nYes" | $MENU -p "Mirror displays?")
	if [ "$mirror" = "Yes" ]; then
		external=$(echo "$screens" | $MENU -p "Optimize resolution for:")
		internal=$(echo "$screens" | grep -v "$external")
		res_external=$(xrandr --query | sed -n "/^$external/,/\+/p" | tail -n 1 | awk '{print $1}')
		res_internal=$(xrandr --query | sed -n "/^$internal/,/\+/p" | tail -n 1 | awk '{print $1}')
		res_ext_x=$(echo "$res_external" | sed 's/x.*//')
		res_ext_y=$(echo "$res_external" | sed 's/.*x//')
		res_int_x=$(echo "$res_internal" | sed 's/x.*//')
		res_int_y=$(echo "$res_internal" | sed 's/.*x//')
		scale_x=$(echo "$res_ext_x / $res_int_x" | bc -l)
		scale_y=$(echo "$res_ext_y / $res_int_y" | bc -l)
		xrandr --output "$external" --auto --scale 1.0x1.0 --output "$internal" --auto --same-as "$external" --scale "$scale_x"x"$scale_y"
	else
		primary=$(echo "$screens" | $MENU -p "Select primary display:")
		secondary=$(echo "$screens" | grep -v ^"$primary"$)
		direction=$(printf "left\\nright" | $MENU -p "$secondary is on the:")
		xrandr --output "$primary" --auto --scale 1.0x1.0 --output "$secondary" --"$direction"-of "$primary" --auto --scale 1.0x1.0
	fi
}

morescreen() { # If multi-monitor is selected and there are more than two screens.
	primary=$(echo "$screens" | $MENU -p "Select primary display:")
	secondary=$(echo "$screens" | grep -v ^"$primary"$ | $MENU -p "Select secondary display:")
	direction=$(printf "left\\nright" | $MENU -p "$secondary is on the:")
	tertiary=$(echo "$screens" | grep -v ^"$primary"$ | grep -v ^"$secondary"$ | $MENU -p "Select third display:")
	xrandr --output "$primary" --auto --output "$secondary" --"$direction"-of "$primary" --auto --output "$tertiary" --"$(printf "left\\nright" | grep -v "$direction")"-of "$primary" --auto
}

multimon() { # Multi-monitor handler.
	if [ -n "$WAYLAND_DISPLAY" ]; then
		hyprctl reload
	elif [ -n "$DISPLAY" ]; then
		case "$(echo "$screens" | wc -l)" in
			2) twoscreen ;;
			*) morescreen ;;
		esac
	fi
}

postrun() { # Stuff to run to clean up.
	wallpaper
}

if [ -n "$WAYLAND_DISPLAY" ]; then
	# Get all possible displays.
	displays=$(hyprctl monitors all | grep "Monitor")
	# Get all connected screens.
	screens=$(echo "$displays" | awk '/Monitor/{print $2}')
elif [ -n "$DISPLAY" ]; then
	# Get all possible displays.
	displays=$(xrandr -q | grep "connected")
	# Get all connected screens.
	screens=$(echo "$displays" | awk '/ connected/ {print $1}')
fi

# If there's only one screen.
[ "$(echo "$screens" | wc -l)" -lt 2 ] &&
{ onescreen "$screens"; postrun; exit ;}

# Main menu.
chosen=$(printf "%s\\nMulti-monitor" "$screens" | $MENU $opt -p "Choose a monitor:") &&
case "$chosen" in
	"Multi-monitor") multimon ;;
	*) onescreen "$chosen" ;;
esac

postrun
